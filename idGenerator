Sub Main()
' Developed by Delfino Ballesteros
' May 12, 2018

    Dim i As Integer
    Dim rCount As Integer
    
    findTradeIdField
    rCount = getRCount
    findTradeIdField

    For i = 1 To numOfTrades
        If (Len(ActiveCell) > 1 And Len(ActiveCell) < 26) Or (Len(ActiveCell) > 26 And Len(ActiveCell) < 53) Then
            ActiveCell.Value = formatTradeId(rCount)
            rCount = getLastFour
            ActiveCell.Offset(1, 0).Select

        ElseIf Len(ActiveCell) = 26 Then
            ActiveCell.Value = IncrementTradeId(rCount)
            rCount = getLastFour
            ActiveCell.Offset(1, 0).Select
        Else
            ActiveCell.Offset(1, 0).Select
        End If
    Next i
End Sub

Sub findTradeIdField()
    Dim i As Integer
    Dim fieldName As String
    Dim Position(7) As Integer      'Declares an array called Position with 7 elements
    
    'Assigns values to each element within the Position Array. Values were taken from
    'each of the submission templates based on TradeId position.
    Position(1) = 53    'EU Lite Template
    Position(2) = 71    'Harmonzed Template
    Position(3) = 161   'CORE EQ Template
    Position(4) = 244   'CORE CR Template
    Position(5) = 261   'CORE FX(CU) Template
    Position(6) = 575   'CORE IR Template
    Position(7) = 1153  'CORE CO Template

    'Searches through 'Position' array to find the UTI field name in the Core template
    For i = 1 To UBound(Position)
        Cells.Find(Position(i)).Select
        fieldName = ActiveCell.Offset(1, 0).Value
        If Position(i) = 53 And fieldName = "Trade ID" Then
            ActiveCell.Offset(2, 0).Select
            Exit For
        ElseIf Position(i) = 71 And fieldName = "UTI ID" Then
            ActiveCell.Offset(2, 0).Select
            Exit For
        ElseIf fieldName = "UTI" Then
            ActiveCell.Offset(2, 0).Select
            Exit For
        Else
            'Do nothing
        End If
    Next i
End Sub

Function formatTradeId(count As Integer) As String

    Dim harn As String
    Dim counter As String
    Dim newFour As Integer
    Dim dt As String

    harn = "HARNESS_AUTO_"
    dt = todaysDate
    newFour = count + 1                    'Adds 1 to the current count
    counter = Format(newFour, "0000")      'Formats counter to 4 digits
    TradeID = harn & dt & "_" & counter    'Concatenates new tradeId
    formatTradeId = TradeID
    
End Function

Function IncrementTradeId(count As Integer) As String

    Dim harn As String
    Dim counter As String
    Dim currFour As Integer
    Dim dt As String
    
    TradeID = ActiveCell.Value              'Save the value to the variable Val
    
    harn = getTradeIdPrefix                 'Extract the first 13 digits of tradeId
    dt = todaysDate                         'Gets todays date and saves to dt
    newFour = count + 1                     'Adds 1 to the current count
    cFour = Format(newFour, "0000")         'Increment counter by 1
    counter = CStr(cFour)
    
    newTradeId = harn & dt & "_" & counter  'Concatenate tradeId
    IncrementTradeId = newTradeId           'Post new tradeId
End Function

Function getRCount()
    Dim runningCounter As Integer
    Dim currCount As Integer
    Dim today As String
    
    today = todaysDate
    
    For i = 1 To numOfTrades
        If Len(ActiveCell) = 26 Then
            If tradeIdDate = today Then
                currCount = getLastFour
                If currCount > runningCounter Then
                    runningCounter = currCount
                    ActiveCell.Offset(1, 0).Select
                Else
                    ActiveCell.Offset(1, 0).Select
                End If
            Else
                ActiveCell.Offset(1, 0).Select
            End If
        Else
            ActiveCell.Offset(1, 0).Select
        End If
    Next i
    getRCount = runningCounter
End Function

Function todaysDate() As String
    Dim dt As Date
    Dim tdate As String
    dt = Date
    fdate = Format(dt, "yyyymmdd")          'Formats date to yyyymmdd
    tdate = CStr(fdate)                     'Converts Date to string
    todaysDate = tdate                      'Saves converted date string to function return
End Function

Function getTradeIdPrefix()
    TradeID = ActiveCell.Value              'Save the value to the variable tradeId
    Prefix = Left(TradeID, 13)              'Extract the Date from trade Id
    getTradeIdPrefix = Prefix               'Returns the prefix string value as function value
End Function

Function tradeIdDate()
    TradeID = ActiveCell.Value              'Save the value to the variable tradeId
    datePortion = Mid(TradeID, 14, 8)       'Extract the Date from trade Id
    tradeIdDate = datePortion               'Saves date as string to function
End Function

Function getLastFour()
    TradeID = ActiveCell.Value              'Save the value to the variable tradeId
    counter = Right(TradeID, 4)             'Extract the last three digits
    getLastFour = CInt(counter)             'Convert string to integer and save
End Function

Function headerCount() As Integer
    'Determines the number of header columns by counting the first 5 rows containing
    'an asterisk(*) in column 1.
    headerCount = Application.WorksheetFunction.CountIf(Range("A1:A5"), "~**")
    Debug.Print headerCount
End Function

Function totalNumRows() As Integer
    'Determines the total number of populated rows that are filled in by referencing
    'column B since this column will always be filled out for every applicalbe trade.
    With ActiveSheet
    totalNumRows = .Cells(.Rows.count, "B").End(xlUp).Row
    End With
    Debug.Print totalNumRows
End Function

Function numOfTrades() As Integer
    'Returns the actual number of trades by subtracting the header rows from the
    'total rows and returning the differnce
    numOfTrades = totalNumRows - headerCount
    Debug.Print numOfTrades
End Function

